<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://localhost:33819/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Mar 2023 11:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:33819/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>csn world</title>
      <link>http://localhost:33819/post/test2/test/</link>
      <pubDate>Wed, 15 Mar 2023 11:00:00 -0700</pubDate>
      <guid>http://localhost:33819/post/test2/test/</guid>
      <description>&lt;h2 id=&#34;this-is-a-big-test&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#this-is-a-big-test&#34;&gt;&lt;/a&gt;&#xA;this is a big test&#xA;&lt;/h2&gt;&lt;p&gt;hi show me someting&#xA;💘 博麗 霊夢 💘&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hello World</title>
      <link>http://localhost:33819/post/hello/</link>
      <pubDate>Wed, 15 Mar 2023 11:00:00 -0700</pubDate>
      <guid>http://localhost:33819/post/hello/</guid>
      <description>&lt;p&gt;💘 博麗 霊夢 💘&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1019_2024/1019_2024_ubuntu%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1019_2024/1019_2024_ubuntu%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;h2 id=&#34;事项清单&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%ba%8b%e9%a1%b9%e6%b8%85%e5%8d%95&#34;&gt;&lt;/a&gt;&#xA;事项清单:&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;项目&lt;/th&gt;&#xA;          &lt;th&gt;完成进度&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ubuntu server连接网络  - 桥接模式&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ubuntu配置静态ip&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ubuntu连接vscode&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;ubuntu-server-配置网络&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#ubuntu-server-%e9%85%8d%e7%bd%ae%e7%bd%91%e7%bb%9c&#34;&gt;&lt;/a&gt;&#xA;ubuntu server 配置网络&#xA;&lt;/h2&gt;&lt;h4 id=&#34;1-可以ping-通物理机-但是无法ping-通wwwbaiducom&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1-%e5%8f%af%e4%bb%a5ping-%e9%80%9a%e7%89%a9%e7%90%86%e6%9c%ba-%e4%bd%86%e6%98%af%e6%97%a0%e6%b3%95ping-%e9%80%9awwwbaiducom&#34;&gt;&lt;/a&gt;&#xA;1. 可以ping 通物理机 但是无法ping 通www.baidu.com:&#xA;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;      其中物理机的网络: [control panel --&amp;gt; network --&amp;gt; network view]&#xD;&#xA;      物理机: 192.168.56.1 192.168.50.1&#xD;&#xA;      vmnet8: 设置了NAT模式: 192.168.14.2  -- 物理机: 192.168.14.1&#xD;&#xA;      vmnet1: 设置了仅主机模式: 192.168.13.2 -- 物理机: 192.168.13.1&#xD;&#xA;      还有一个默认的网关: 172.18.112.1 &#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;参考解决办法: &lt;a href=&#34;https://blog.csdn.net/booklijian/article/details/116491288&#34;&gt;https://blog.csdn.net/booklijian/article/details/116491288&lt;/a&gt;&#xA;在 /etc/systemd/resolved.conf文件中修改, 增加DNS信息&#xA;并以root运行以下命令&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;systemctl restart systemd-resolved&#xD;&#xA;systemctl enable systemd-resolved&#xD;&#xA; &#xD;&#xA;mv /etc/resolv.conf  /etc/resolv.conf.bak&#xD;&#xA;ln -s /run/systemd/resolve/resolv.conf /etc/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;ubuntu-设置静态ip&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#ubuntu-%e8%ae%be%e7%bd%ae%e9%9d%99%e6%80%81ip&#34;&gt;&lt;/a&gt;&#xA;ubuntu 设置静态ip&#xA;&lt;/h2&gt;&lt;p&gt;设置静态ip时候经常发生错误,后面查看了,查看了下本机的route -n:&#xA;&lt;img src=&#34;image.png&#34; alt=&#34;&#xA;&#34;&gt;&#xA;&lt;!-- raw HTML omitted --&gt;也就是说, 172.10.112.的网关就是网桥模式的默认网关,而不是192.168.56.1和192.168.50.1之类的&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1020_2024/1020_2024_github%E7%9A%84ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1020_2024/1020_2024_github%E7%9A%84ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;p&gt;#github连接 以及 待解决问题&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;任务&lt;/th&gt;&#xA;          &lt;th&gt;完成进度&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ubuntu_py 的github连接&lt;/td&gt;&#xA;          &lt;td&gt;未完成, 遇到问题&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ubuntu_server 网桥模式的网桥开启&lt;/td&gt;&#xA;          &lt;td&gt;改成NAT模式后重新设置ip和gateway正常连网&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;github-的ssh免密码登录设置--ssh--t-报错-connecton-closed&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#github-%e7%9a%84ssh%e5%85%8d%e5%af%86%e7%a0%81%e7%99%bb%e5%bd%95%e8%ae%be%e7%bd%ae--ssh--t-%e6%8a%a5%e9%94%99-connecton-closed&#34;&gt;&lt;/a&gt;&#xA;github 的ssh免密码登录设置 &amp;amp;&amp;amp; ssh -T 报错: connecton closed&#xA;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;背景: 准备配置ubuntu24的ssh免密登录&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;添加ssh-key步骤&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0ssh-key%e6%ad%a5%e9%aa%a4&#34;&gt;&lt;/a&gt;&#xA;添加ssh-key步骤:&#xA;&lt;/h2&gt;&lt;p&gt;ubuntu terminal 输入:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  sshkey-gen&#xD;&#xA;  [然后直接回车,连续回车就行]&#xD;&#xA;&#xD;&#xA;  cat ~/.ssh/*.pub&#xD;&#xA;  查看本次生成的公钥&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;复制到github账户下:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-2.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击添加New SSH key自行设置名字, 另外expire time最好设置为永久,以免失效(如果是自己的电脑的话)&lt;/p&gt;&#xA;&lt;h2 id=&#34;ssh--t-gitgithubcom-报错-connection-cloosed&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#ssh--t-gitgithubcom-%e6%8a%a5%e9%94%99-connection-cloosed&#34;&gt;&lt;/a&gt;&#xA;ssh -T &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt; 报错: connection cloosed&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;image-3.png&#34; alt=&#34;&#xA;&#34;&gt;&#xA;我寻思着以上步骤也没啥问题啊,网络也是正常的&lt;/p&gt;&#xA;&lt;p&gt;好的,这个问题后决定到另外一个ubuntu去尝试, 结果发现之前设置的网桥模式出错了.似乎主机或者虚拟机的网桥没有开启, 导致ubuntu_server机器出错.&lt;/p&gt;&#xA;&lt;h2 id=&#34;ubuntu-server又又又连不上网&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#ubuntu-server%e5%8f%88%e5%8f%88%e5%8f%88%e8%bf%9e%e4%b8%8d%e4%b8%8a%e7%bd%91&#34;&gt;&lt;/a&gt;&#xA;ubuntu server又又又连不上网&#xA;&lt;/h2&gt;&lt;p&gt;感觉物理机的网桥模式可能有问题, 在此不深究了, 直接换成NAT模式去做了&#xA;[ubuntu_server 换成nat 模式, 修改/etc/netplan文件成默认, 参照1019_2024ubuntu配置.md文档获取网关地址, 重新设置 NAT模式下的ip和gateway. &amp;ndash; 执行 netplan applay]&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1020_2024/1020_2024_remote%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1020_2024/1020_2024_remote%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;h1 id=&#34;远程桌面连接设置&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%bf%9c%e7%a8%8b%e6%a1%8c%e9%9d%a2%e8%bf%9e%e6%8e%a5%e8%ae%be%e7%bd%ae&#34;&gt;&lt;/a&gt;&#xA;远程桌面连接设置&#xA;&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;windows有一款自带的远程桌面连接, 感觉相当简洁好用. 所以希望能连接上.   &#xD;&#xA;参考链接: https://blog.csdn.net/ytwhit/article/details/135844109&#xD;&#xA;https://blog.csdn.net/m0_62358594/article/details/142337745&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image-1.png&#34; alt=&#34;&#xA;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;查看物理机可以用来远程连接的ip地址&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9f%a5%e7%9c%8b%e7%89%a9%e7%90%86%e6%9c%ba%e5%8f%af%e4%bb%a5%e7%94%a8%e6%9d%a5%e8%bf%9c%e7%a8%8b%e8%bf%9e%e6%8e%a5%e7%9a%84ip%e5%9c%b0%e5%9d%80&#34;&gt;&lt;/a&gt;&#xA;查看物理机可以用来远程连接的ip地址&#xA;&lt;/h2&gt;&lt;p&gt;目前查看到的是: 192.168.50.105(本机局域网ip地址), 假如说不是在同一个局域网网段下可能会出问题.&lt;/p&gt;&#xA;&lt;p&gt;所以非局域网连接解决: &lt;a href=&#34;https://www.bilibili.com/read/cv39011249/?jump_opus=1&#34;&gt;https://www.bilibili.com/read/cv39011249/?jump_opus=1&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1021_2024/1020_2024_%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1021_2024/1020_2024_%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</guid>
      <description>&lt;h1 id=&#34;基于dram-nvm异构内存的操作系统页面级数据迁移机制研究-author-邵若忱&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e4%ba%8edram-nvm%e5%bc%82%e6%9e%84%e5%86%85%e5%ad%98%e7%9a%84%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f%e9%a1%b5%e9%9d%a2%e7%ba%a7%e6%95%b0%e6%8d%ae%e8%bf%81%e7%a7%bb%e6%9c%ba%e5%88%b6%e7%a0%94%e7%a9%b6-author-%e9%82%b5%e8%8b%a5%e5%bf%b1&#34;&gt;&lt;/a&gt;&#xA;基于DRAM-NVM异构内存的操作系统页面级数据迁移机制研究 author: 邵若忱&#xA;&lt;/h1&gt;&lt;h2 id=&#34;摘要部分&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%91%98%e8%a6%81%e9%83%a8%e5%88%86&#34;&gt;&lt;/a&gt;&#xA;摘要部分:&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;计算密集型计算技术发展, 内存不足, DRAM-NVM异构内存提供了解决方案&lt;/li&gt;&#xA;&lt;li&gt;异构内存之间读写性能差异较大, 操作系统无法根据热度进行合理调配, 导致性能不佳&lt;/li&gt;&#xA;&lt;li&gt;本文设计了基于B+树的页面访问历史采样工具 &amp;ndash; 解决热度问题&lt;/li&gt;&#xA;&lt;li&gt;本文设计了基于DRAN-NVM的异构内存数据迁移机制 &amp;ndash; 解决异构内存问题&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;修改论文用到的网站&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bf%ae%e6%94%b9%e8%ae%ba%e6%96%87%e7%94%a8%e5%88%b0%e7%9a%84%e7%bd%91%e7%ab%99&#34;&gt;&lt;/a&gt;&#xA;修改论文用到的网站&#xA;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://elixir.bootlin.com/linux/v6.11.4/source/include/linux/mm_types.h#L72&#34;&gt;https://elixir.bootlin.com/linux/v6.11.4/source/include/linux/mm_types.h#L72&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;论文主要组成部分&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%ae%ba%e6%96%87%e4%b8%bb%e8%a6%81%e7%bb%84%e6%88%90%e9%83%a8%e5%88%86&#34;&gt;&lt;/a&gt;&#xA;论文主要组成部分&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;页面热度采样&lt;/li&gt;&#xA;&lt;li&gt;页面热度测评&lt;/li&gt;&#xA;&lt;li&gt;内存迁移&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;页面热度采样&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%a1%b5%e9%9d%a2%e7%83%ad%e5%ba%a6%e9%87%87%e6%a0%b7&#34;&gt;&lt;/a&gt;&#xA;页面热度采样&#xA;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;分成3种采样方式&#xD;&#xA;1) 基于PMU事件的采样 : &#xD;&#xA;   PMU事件: https://learn.microsoft.com/zh-cn/windows-hardware/test/wpt/recording-pmu-events&#xD;&#xA;   基于处理器的PMU组件进行硬件事件采样, 是用来获取应用程序运行&#xD;&#xA;2) 2)  &#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1022_2024/1022_2024_%E8%A7%A3%E5%86%B3ssh-%E7%99%BB%E5%BD%95kex_exchange%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1022_2024/1022_2024_%E8%A7%A3%E5%86%B3ssh-%E7%99%BB%E5%BD%95kex_exchange%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;h1 id=&#34;ssh登录-kex_excahnge-以及-connetcion-refused-报错--bash-脚本解决&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#ssh%e7%99%bb%e5%bd%95-kex_excahnge-%e4%bb%a5%e5%8f%8a-connetcion-refused-%e6%8a%a5%e9%94%99--bash-%e8%84%9a%e6%9c%ac%e8%a7%a3%e5%86%b3&#34;&gt;&lt;/a&gt;&#xA;ssh登录 kex_excahnge 以及 connetcion refused 报错 + bash 脚本解决&#xA;&lt;/h1&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;任务&lt;/th&gt;&#xA;          &lt;th&gt;完成进度&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ssh -T &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;报错&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;          &lt;td&gt;proxy代理错误&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;物理机 ssh ubuntu@ip 报错&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;          &lt;td&gt;* 依赖项缺失: ssh.socket  &lt;!-- raw HTML omitted --&gt;*系统没有启动: systemctl enable ssh ; service ssh restart&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ssh -T &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt; 解决方法脚本整理&lt;/td&gt;&#xA;          &lt;td&gt;√&lt;/td&gt;&#xA;          &lt;td&gt;已经上传 &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:caisn-github/sn_scrpts.git&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;整理一份裸机添加自己github账户以及完成ssh的脚本&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;下次任务&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;问题描述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%97%ae%e9%a2%98%e6%8f%8f%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;问题描述&#xA;&lt;/h2&gt;&lt;p&gt;出现了两个相似的问题, 问题是这样:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;在虚拟机上登录ssh -T &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;报错&#xA;&lt;img src=&#34;image-7.png&#34; alt=&#34;alt text&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;在windows物理机上, 想要ssh 登录物理机上的ubuntu报错. 虚拟机ubuntu_server报错&amp;gt; connection refused. 而且这台虚拟机之前是可以登录上的???why&#xA;其中问题2 的大概情况:&#xA;&lt;img src=&#34;image.png&#34; alt=&#34;alt text&#34;&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;解决方法&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95&#34;&gt;&lt;/a&gt;&#xA;解决方法&#xA;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;问题2:&lt;/strong&gt; 之前是可以ssh登录上的, 但是现在不行了?????&#xA;    可能是22号端口被占用了&#xA;     netstat -tln | grep 22 [但是没有找到这个端口号]&#xA;在网上看了下22号端口:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1024_2024/remote%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1024_2024/remote%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5/</guid>
      <description>&lt;h2 id=&#34;大概流程描述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a4%a7%e6%a6%82%e6%b5%81%e7%a8%8b%e6%8f%8f%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;大概流程描述&#xA;&lt;/h2&gt;&lt;p&gt;是这样, 为了使用windows自带的远程桌面: 但是windows自带的远程桌面是有问题的: 只能在同一个局域网下访问.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1.首先到电脑设置中开启被控电脑的远程桌面权限&#xA;&lt;img src=&#34;image-1.png&#34; alt=&#34;alt text&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;2.找个工具做内网穿透, 这里用了MoleSDN来做, (没有其他原因, 鼠鼠太可爱了, 还能帮我挖洞!maye用它, 给它爆金币~!), 可以在bili上搜索教程, 直接看官网也行&lt;/li&gt;&#xA;&lt;li&gt;3.moleSDN比较简单, google搜索后, 新建我的服务器, 然后将被控电脑作为中心, 将控制端作为接入&lt;img src=&#34;image.png&#34; alt=&#34;alt text&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;4.将被控端和控制端的鼠鼠都打开, 并连接上&lt;/li&gt;&#xA;&lt;li&gt;5.在控制端打开远程桌面, 输入上图中的&amp;quot;中心&amp;quot;的ip地址进行连接, 成功连接~!&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1024_2024/ubuntu%E6%90%AD%E5%BB%BAmysql_docker%E8%B7%91%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1024_2024/ubuntu%E6%90%AD%E5%BB%BAmysql_docker%E8%B7%91%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</guid>
      <description>&lt;h1 id=&#34;log-软件测试选题-数据库mysql-软件测试&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#log-%e8%bd%af%e4%bb%b6%e6%b5%8b%e8%af%95%e9%80%89%e9%a2%98-%e6%95%b0%e6%8d%ae%e5%ba%93mysql-%e8%bd%af%e4%bb%b6%e6%b5%8b%e8%af%95&#34;&gt;&lt;/a&gt;&#xA;LOG 软件测试选题: 数据库mysql 软件测试&#xA;&lt;/h1&gt;&lt;h2 id=&#34;一ubuntu2404搭建docker环境&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%80ubuntu2404%e6%90%ad%e5%bb%badocker%e7%8e%af%e5%a2%83&#34;&gt;&lt;/a&gt;&#xA;一.ubuntu24.04搭建docker环境&#xA;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt; 先更新ap-get: &#xD;&#xA; sudo apt-get update&#xD;&#xA; sudo apt-get upgrade&#xD;&#xA; 安装docker:&#xD;&#xA; sudo apt-get install docker-ce docker-ce-cli containerd.io&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;二-mysql的github地址&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%ba%8c-mysql%e7%9a%84github%e5%9c%b0%e5%9d%80&#34;&gt;&lt;/a&gt;&#xA;二. mysql的github地址:&#xA;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;https://github.com/mysql&#xD;&#xA;mysql-server地址: https://github.com/mysql/mysql-server&#xD;&#xA;mysql-docker地址: https://github.com/mysql/mysql-docker&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;三mysql环境搭建&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%89mysql%e7%8e%af%e5%a2%83%e6%90%ad%e5%bb%ba&#34;&gt;&lt;/a&gt;&#xA;三.mysql环境搭建&#xA;&lt;/h2&gt;&lt;p&gt;为了快速的搭建起来测试框架, 这里使用docker的形式搭建:&#xA;参照教程:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://www.runoob.com/docker/docker-install-mysql.html&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;3测试环境搭建&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#3%e6%b5%8b%e8%af%95%e7%8e%af%e5%a2%83%e6%90%ad%e5%bb%ba&#34;&gt;&lt;/a&gt;&#xA;3.测试环境搭建&#xA;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt; 软件测试环境搭建: 可以使用mysql自带的软件测试工具 https://blog.csdn.net/weixin_41287260/article/details/130473382&#xD;&#xA; 也可以学习下其他的测试工具, &#xD;&#xA;&#xD;&#xA; 或者使用juptewr, 我个人认为用自带测试, 有时间再拿jupter做测试                &#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;4开始测试&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#4%e5%bc%80%e5%a7%8b%e6%b5%8b%e8%af%95&#34;&gt;&lt;/a&gt;&#xA;4.开始测试&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1026_2024/1026%E6%90%AD%E5%BB%BAoceanbase%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1026_2024/1026%E6%90%AD%E5%BB%BAoceanbase%E7%8E%AF%E5%A2%83/</guid>
      <description>&lt;h2 id=&#34;搭建oceanbase开发环境----编译--运行&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%90%ad%e5%bb%baoceanbase%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83----%e7%bc%96%e8%af%91--%e8%bf%90%e8%a1%8c&#34;&gt;&lt;/a&gt;&#xA;搭建OceanBase开发环境 &amp;ndash; 编译 &amp;amp; 运行&#xA;&lt;/h2&gt;&lt;p&gt;[已报名参加大赛]&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;参照教程:&lt;!-- raw HTML omitted --&gt;&#xA;&lt;a href=&#34;https://oceanbase.github.io/miniob/dev-env/how_to_dev_miniob_by_vscode/#_2&#34;&gt;https://oceanbase.github.io/miniob/dev-env/how_to_dev_miniob_by_vscode/#_2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oceanbase/miniob/blob/main/docs/docs/how_to_build.md&#34;&gt;https://github.com/oceanbase/miniob/blob/main/docs/docs/how_to_build.md&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;环境搭建&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%8e%af%e5%a2%83%e6%90%ad%e5%bb%ba&#34;&gt;&lt;/a&gt;&#xA;环境搭建&#xA;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt; 已经安装的工具如下: &#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;--- 以下使用apt install即可安装, 安装之前先更行apt: sudo apt update ; sudo apt upgrade&#xD;&#xA;casinan@caisinan:~/Desktop$ cmake --version&#xD;&#xA;cmake version 3.28.3&#xD;&#xA;&#xD;&#xA;casinan@caisinan:~/Desktop$ make --version&#xD;&#xA;GNU Make 4.3&#xD;&#xA;&#xD;&#xA;casinan@caisinan:~/Desktop$ g++ --version&#xD;&#xA;g++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0&#xD;&#xA;&#xD;&#xA;casinan@caisinan:~/Desktop$ gcc --version&#xD;&#xA;gcc (Ubuntu 13.2.0-23ubuntu4) 13.2.0&#xD;&#xA;&#xD;&#xA;casinan@caisinan:~/Desktop$ sudo apt install googletest&#xD;&#xA;[sudo] password for casinan: &#xD;&#xA;Reading package lists... Done&#xD;&#xA;Building dependency tree... Done&#xD;&#xA;Reading state information... Done&#xD;&#xA;googletest is already the newest version (1.14.0-1).&#xD;&#xA;0 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中libevent的安装方式如下:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1026_2024/%E6%90%AD%E5%BB%BAoceanbase%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1026_2024/%E6%90%AD%E5%BB%BAoceanbase%E7%8E%AF%E5%A2%83/</guid>
      <description>&lt;h2 id=&#34;搭建oceanbase开发环境----编译--运行&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%90%ad%e5%bb%baoceanbase%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83----%e7%bc%96%e8%af%91--%e8%bf%90%e8%a1%8c&#34;&gt;&lt;/a&gt;&#xA;搭建OceanBase开发环境 &amp;ndash; 编译 &amp;amp; 运行&#xA;&lt;/h2&gt;&lt;p&gt;[已报名参加大赛]&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;参照教程:&lt;!-- raw HTML omitted --&gt;&#xA;&lt;a href=&#34;https://oceanbase.github.io/miniob/dev-env/how_to_dev_miniob_by_vscode/#_2&#34;&gt;https://oceanbase.github.io/miniob/dev-env/how_to_dev_miniob_by_vscode/#_2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oceanbase/miniob/blob/main/docs/docs/how_to_build.md&#34;&gt;https://github.com/oceanbase/miniob/blob/main/docs/docs/how_to_build.md&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;环境搭建&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%8e%af%e5%a2%83%e6%90%ad%e5%bb%ba&#34;&gt;&lt;/a&gt;&#xA;环境搭建&#xA;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt; 已经安装的工具如下: &#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;--- 以下使用apt install即可安装, 安装之前先更行apt: sudo apt update ; sudo apt upgrade&#xD;&#xA;&#xD;&#xA;casinan@caisinan:~/Desktop$ cmake --version&#xD;&#xA;cmake version 3.28.3&#xD;&#xA;&#xD;&#xA;casinan@caisinan:~/Desktop$ make --version&#xD;&#xA;GNU Make 4.3&#xD;&#xA;&#xD;&#xA;casinan@caisinan:~/Desktop$ g++ --version&#xD;&#xA;g++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0&#xD;&#xA;&#xD;&#xA;casinan@caisinan:~/Desktop$ gcc --version&#xD;&#xA;gcc (Ubuntu 13.2.0-23ubuntu4) 13.2.0&#xD;&#xA;&#xD;&#xA;casinan@caisinan:~/Desktop$ sudo apt install googletest&#xD;&#xA;[sudo] password for casinan: &#xD;&#xA;Reading package lists... Done&#xD;&#xA;Building dependency tree... Done&#xD;&#xA;Reading state information... Done&#xD;&#xA;googletest is already the newest version (1.14.0-1).&#xD;&#xA;0 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中libevent的安装方式如下:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1027_2024/%E5%86%85%E5%AD%98%E6%96%B9%E5%90%91-%E5%86%85%E5%AD%981/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1027_2024/%E5%86%85%E5%AD%98%E6%96%B9%E5%90%91-%E5%86%85%E5%AD%981/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1029_2024/1029_2024ob-date%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1029_2024/1029_2024ob-date%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;h1 id=&#34;1029_2024ob-date类型的实现&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1029_2024ob-date%e7%b1%bb%e5%9e%8b%e7%9a%84%e5%ae%9e%e7%8e%b0&#34;&gt;&lt;/a&gt;&#xA;1029_2024OB-date类型的实现&#xA;&lt;/h1&gt;&lt;h2 id=&#34;date类型的实现&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#date%e7%b1%bb%e5%9e%8b%e7%9a%84%e5%ae%9e%e7%8e%b0&#34;&gt;&lt;/a&gt;&#xA;date类型的实现&#xA;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt; 参考教程: https://open.oceanbase.com/course/detail/9231&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;开启客户端&amp;amp;服务端:&lt;/strong&gt;&#xA;$ ps -ef |grep ob&#xA;$ kill +进程ip (正在运行的其他的占用了6789端口的ob服务器关掉)&lt;/p&gt;&#xA;&lt;p&gt;直接按vscode的 f5 进行debug (因为在1029_2025OB环境的配置2中, 已经在launch.json里面设置了启动时候的 server服务器了, 所以直接debug运行就好了)&lt;/p&gt;&#xA;&lt;p&gt;启动服务器后, cd build&#xA;$ ./bin/obclient -p 6789&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;创建表以及测试语句记录:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  create TABLE date_table(id int, udate date);&#xD;&#xA;  create INDEX index_id on date_table(u_date);&#xD;&#xA;&#xD;&#xA;  insert into date_table VALUES(1, &amp;#39;2020-01-21&amp;#39;);&#xD;&#xA;  insert into date_table VALUES(2, &amp;#39;2021-01-23&amp;#39;);&#xD;&#xA;  insert into date_table VALUES(3, &amp;#39;2020-04-21&amp;#39;);&#xD;&#xA;  insert into date_table VALUES(4, &amp;#39;2025-01-21&amp;#39;);&#xD;&#xA;  insert into date_table VALUES(5, &amp;#39;2020-09-21&amp;#39;);&#xD;&#xA;  insert into date_table VALUES(6, &amp;#39;2020-12-2&amp;#39;);&#xD;&#xA;  insert into date_table VALUES(7, &amp;#39;2024-11-21&amp;#39;);&#xD;&#xA;  &#xD;&#xA;   select * from date_table where u_date &amp;gt; &amp;#39;2020-1-20&amp;#39;;&#xD;&#xA;   select * from date_table where u_date &amp;lt; &amp;#39;2024-1-9&amp;#39;;&#xD;&#xA;   select * from date_table where u_date = &amp;#39;2024-1-9&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重新编译代码记录&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1029_2024/1029_2024ob%E7%8E%AF%E5%A2%83%E7%BB%A7%E7%BB%AD%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1029_2024/1029_2024ob%E7%8E%AF%E5%A2%83%E7%BB%A7%E7%BB%AD%E6%90%AD%E5%BB%BA/</guid>
      <description>&lt;h1 id=&#34;1029-ob环境继续搭建&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1029-ob%e7%8e%af%e5%a2%83%e7%bb%a7%e7%bb%ad%e6%90%ad%e5%bb%ba&#34;&gt;&lt;/a&gt;&#xA;1029-OB环境继续搭建&#xA;&lt;/h1&gt;&lt;h2 id=&#34;环境继续搭建&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%8e%af%e5%a2%83%e7%bb%a7%e7%bb%ad%e6%90%ad%e5%bb%ba&#34;&gt;&lt;/a&gt;&#xA;环境继续搭建&#xA;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt; 参考教程: https://open.oceanbase.com/train?questionId=600011&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;报错--解决方法&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%8a%a5%e9%94%99--%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95&#34;&gt;&lt;/a&gt;&#xA;报错 &amp;amp;&amp;amp; 解决方法:&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;报错1:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;在安装 libaio1&#xD;&#xA;sudo apt-get install libaio1&#xD;&#xA; Reading package lists... Done&#xD;&#xA; Building dependency tree... Done&#xD;&#xA; E: Package &#39;libaio1&#39; has no installation candidate&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;解决办法: 更换apt-get源&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;这里找到了清华镜像源进行替换:&#xD;&#xA;https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt; 目前ubuntu24.04 noble版本将sourlce.list放置到了一个新的目录下:&#xD;&#xA; /etc/apt/sources.list.d/ubuntu.sources&#xD;&#xA; cp /etc/apt/sources.list.d/ubuntu.sources /etc/apt/sources.list.d/ubuntu.sources.bak&#xD;&#xA; 然后重新编辑, 将清华源加入后: &#xD;&#xA; 执行sudo apt-get update; sudo apt-get upgrade&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;报错2:&lt;/strong&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;执行 sudo apt-get update的时候, 出现&#xD;&#xA; E: The repository &amp;#39;http://archive.canonical.com lucid Release&amp;#39; does not have a Release file&#xA;&lt;/code&gt;&lt;/pre&gt;这里是因为 /etc/apt/source.lists.d/目录下有无法获取的源,&#xA;找找找:&#xA;&lt;img src=&#34;image.png&#34; alt=&#34;&#xA;&#34;&gt;&#xA;把canonial的这个文件删除后重新执行命令&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo rm archive_uri-http_archive_canonical_com_-noble.list&#xD;&#xA;sudo apt-get update&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;报错3&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;好的更换了清华源发现没卵用&#xD;&#xA;我猜测 libaio1 可能是最近才出的, 或许要使用wget或者curl的方法去直接下载链接 &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次直接google ubuntu24 安装 libaio1 终于出现了一堆链接, 看来是找对了, let us try try: &lt;a href=&#34;https://blog.csdn.net/engchina/article/details/139812240&#34;&gt;https://blog.csdn.net/engchina/article/details/139812240&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1030_2024/1030_ob_droptable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1030_2024/1030_ob_droptable/</guid>
      <description>&lt;h1 id=&#34;1030_ob_droptablemd&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1030_ob_droptablemd&#34;&gt;&lt;/a&gt;&#xA;1030_oB_dropTable.md&#xA;&lt;/h1&gt;&lt;h2 id=&#34;说明&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%af%b4%e6%98%8e&#34;&gt;&lt;/a&gt;&#xA;说明:&#xA;&lt;/h2&gt;&lt;p&gt;目前数据库已经可以成功parse drop table语句，但是 execute drop table语句时，出现了问题.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;问题1 : 无法启动服务器, 估计之前代码直接把sys.db都删除了, 导致无法正常启库, 解决方法: 先注销该语句,&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;感觉之前的 launch.json文件不太对劲, 也许要在 build.bin文件下执行&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;问题2 : 对于删除: 猜测drop语句要删除以下目录:&#xA;&lt;img src=&#34;image.png&#34; alt=&#34;alt text&#34;&gt;&#xA;这里没有加锁的情况, 估计直接删除就可以&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;update功能的实现&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#update%e5%8a%9f%e8%83%bd%e7%9a%84%e5%ae%9e%e7%8e%b0&#34;&gt;&lt;/a&gt;&#xA;update功能的实现&#xA;&lt;/h2&gt;&lt;p&gt;语句:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  create table t1 (id int, var int);&#xD;&#xA;  insert into t1 values (1, 11);&#xD;&#xA;  insert into t1 values (2, 11);&#xD;&#xA;  insert into t1 values (3, 21);&#xD;&#xA;  select * from t1;&#xD;&#xA;  drop table t1;&#xD;&#xA;&#xD;&#xA;  update t1 set id = 4 where id = 2;&#xD;&#xA;  select * from t1;&#xD;&#xA;&#xD;&#xA;  delet from t1 where id = 3;&#xD;&#xA;  insert into t1(id) values 5;&#xD;&#xA;  select * from t1;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;测试用例:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1101_2024/1101_%E8%AE%BA%E6%96%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1101_2024/1101_%E8%AE%BA%E6%96%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</guid>
      <description>&lt;h1 id=&#34;1101_论文问题解决&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1101_%e8%ae%ba%e6%96%87%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3&#34;&gt;&lt;/a&gt;&#xA;1101_论文问题解决&#xA;&lt;/h1&gt;&lt;h2 id=&#34;问题描述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%97%ae%e9%a2%98%e6%8f%8f%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;问题描述&#xA;&lt;/h2&gt;&lt;p&gt;利用MG-LRU的自然分层特性，将不同介质的页面组织为MG-LRU上的不同层链表集合&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题分析&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%97%ae%e9%a2%98%e5%88%86%e6%9e%90&#34;&gt;&lt;/a&gt;&#xA;问题分析&#xA;&lt;/h2&gt;&lt;h2 id=&#34;问题解决方案&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88&#34;&gt;&lt;/a&gt;&#xA;问题解决方案&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1105_2024/1105_%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1105_2024/1105_%E8%AE%B0%E5%BD%95/</guid>
      <description>&lt;h1 id=&#34;1105_记录&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1105_%e8%ae%b0%e5%bd%95&#34;&gt;&lt;/a&gt;&#xA;1105_记录&#xA;&lt;/h1&gt;&lt;h2 id=&#34;完成马克思辨证期末作业&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%8c%e6%88%90%e9%a9%ac%e5%85%8b%e6%80%9d%e8%be%a8%e8%af%81%e6%9c%9f%e6%9c%ab%e4%bd%9c%e4%b8%9a&#34;&gt;&lt;/a&gt;&#xA;完成马克思辨证期末作业&#xA;&lt;/h2&gt;&lt;h2 id=&#34;准备工程伦理论文&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%87%86%e5%a4%87%e5%b7%a5%e7%a8%8b%e4%bc%a6%e7%90%86%e8%ae%ba%e6%96%87&#34;&gt;&lt;/a&gt;&#xA;准备工程伦理论文&#xA;&lt;/h2&gt;&lt;h2 id=&#34;heading&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#heading&#34;&gt;&lt;/a&gt;&#xA;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1120_2024/1120_2024%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1120_2024/1120_2024%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</guid>
      <description>&lt;h1 id=&#34;1120-软件测试-mysql规划&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1120-%e8%bd%af%e4%bb%b6%e6%b5%8b%e8%af%95-mysql%e8%a7%84%e5%88%92&#34;&gt;&lt;/a&gt;&#xA;1120 软件测试-mysql规划:&#xA;&lt;/h1&gt;&lt;h2 id=&#34;测试用例分类&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b5%8b%e8%af%95%e7%94%a8%e4%be%8b%e5%88%86%e7%b1%bb&#34;&gt;&lt;/a&gt;&#xA;测试用例分类:&#xA;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;功能测试&lt;/strong&gt; : 主要测试软件的功能是否符合要求，如登录、注册、查看、修改、删除等功能。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;测试语句:&#xD;&#xA;1.登陆语句:&#xD;&#xA;  mysql -u username -p password&#xD;&#xA;2.创建数据库和表&#xD;&#xA;  create database testDB;&#xD;&#xA;3.创建表格:&#xD;&#xA;  CREATE TABLE users (&#xD;&#xA;    id INT AUTO_INCREMENT PRIMARY KEY,&#xD;&#xA;    username VARCHAR(50) NOT NULL,&#xD;&#xA;    email VARCHAR(100) NOT NULL,&#xD;&#xA;    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP&#xD;&#xA; );  &#xD;&#xA;4.插入数据:&#xD;&#xA;  INSERT INTO users (id, username, email, created_at) VALUES (1, &amp;#39;casinan&amp;#39;, &amp;#39;caisn7049@gmail.com&amp;#39;, &amp;#39;2021-01-2&amp;#39;);&#xD;&#xA;  INSERT INTO users (id, username, email, created_at) VALUES (&amp;#39;shac&amp;#39;, &amp;#39;test@testem.com&amp;#39;,&amp;#39;2023-01-01&amp;#39;);&#xD;&#xA;  INSERT INTO users (id, username, email, created_at) VALUES (&amp;#39;shac&amp;#39;, &amp;#39;test@testem.com&amp;#39;,&amp;#39;2023-01-01&amp;#39;);&#xD;&#xA;5.查询数据:&#xD;&#xA;  SELECT * FROM users;&#xD;&#xA;  SELECT username, email FROM users WHERE id = 1;&#xD;&#xA;6.修改数据:&#xD;&#xA;  UPDATE users SET email = &amp;#39;scai1364@gmail.com&amp;#39; WHERE id = 1;&#xD;&#xA;7.删除数据:&#xD;&#xA;  DELETE FROM users WHERE id = 1;&#xD;&#xA;8.添加索引:&#xD;&#xA;  CREATE INDEX idx_email ON users (email);&#xD;&#xA;9.删除索引:&#xD;&#xA;  DROP INDEX idx_email ON users;&#xD;&#xA;10.使用聚合函数:&#xD;&#xA;  SELECT COUNT(*) as user_count FROM users;&#xD;&#xA;  SELECT AVG(length(username)) AS avg_username_length FROM users;&#xD;&#xA;11.分组查询:&#xD;&#xA;  SELECT created_at, COUNT(*) AS count FROM users GROUP BY created_at;&#xD;&#xA;12.连接查询:&#xD;&#xA;  SELECT u1.id, u1.username, u2.email FROM users u1 INNER JOIN users u2 ON u1.id = u2.id;&#xD;&#xA;13.事务:&#xD;&#xA;  START TRANSACTION;&#xD;&#xA;  UPDATE users SET email = &amp;#39;a18218061816@gmail.com&amp;#39; WHERE id = 1;&#xD;&#xA;  ROLLBACK;  -- 如果出现问题, 回滚&#xD;&#xA;  SELECT * FROM users where id=1&#xD;&#xA;  COMMIT;    -- 如果一切正常, 则提交事务&#xD;&#xA;  SELECT * FROM users where id=1;&#xD;&#xA;14.使用存储过程和函数&#xD;&#xA;  CREATE PROCEDURE GetUserCount()&#xD;&#xA;BEGIN&#xD;&#xA;    SELECT COUNT(*) AS total_users FROM users;&#xD;&#xA;END;&#xD;&#xA;CALL GetUserCount();&#xD;&#xA;15.使用视图:&#xD;&#xA;  CREATE VIEW user_view AS SELECT id, username, email FROM users;&#xD;&#xA;16.使用触发器:&#xD;&#xA;  CREATE TRIGGER user_insert_trigger AFTER INSERT ON users&#xD;&#xA;FOR EACH ROW&#xD;&#xA;BEGIN&#xD;&#xA;    INSERT INTO user_view (id, username, email) VALUES (NEW.id, NEW.username, NEW.email);&#xD;&#xA;END;&#xD;&#xA;&#xD;&#xA;   INSERT INRO users (id, username, email) VALUES (31, &amp;#39;casinan&amp;#39;, &amp;#39;caisn7049@gmail.com&amp;#39;);&#xD;&#xA;   SELECT * FROM user_view;&#xD;&#xA;17.使用mysql的内置函数:&#xD;&#xA;数学函数:&#xD;&#xA;   SELECT ABS(-10) as absolute_value;&#xD;&#xA;   SELECT CEIL(1.5) as ceiling_value;&#xD;&#xA;   SELECT FLOOR(1.5) as floor_value;&#xD;&#xA;   SELECT ROUND(1.5) as rounding_value;&#xD;&#xA;   SELECT TRUNCATE(1.5) as truncating_value;&#xD;&#xA;   日期函数:&#xD;&#xA;   SELECT CURDATE() as current_date;&#xD;&#xA;   SELECT CURTIME() as current_time;&#xD;&#xA;   SELECT NOW() as current_datetime;&#xD;&#xA;   SELECT DATE_FORMAT(&amp;#39;2021-01-01&amp;#39;, &amp;#39;%Y-%m-%d&amp;#39;) as formatted_date;&#xD;&#xA;   字符串函数:&#xD;&#xA;   SELECT CONCAT(&amp;#39;hello&amp;#39;, &amp;#39;world&amp;#39;) as concatenated_string;&#xD;&#xA;   SELECT SUBSTRING(&amp;#39;hello world&amp;#39;, 6) as substring_value;&#xD;&#xA;   SELECT REPLACE(&amp;#39;hello world&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;z&amp;#39;) as replaced_string;&#xD;&#xA;   SELECT MD5(&amp;#39;hello world&amp;#39;) as md5_value;&#xD;&#xA;   SELECT SHA1(&amp;#39;hello world&amp;#39;) as sha1_value;&#xD;&#xA;   SELECT LEFT(&amp;#39;hello world&amp;#39;, 5) as left_string;&#xD;&#xA;   SELECT RIGHT(&amp;#39;hello world&amp;#39;, 5) as right_string;&#xD;&#xA;   SELECT LENGTH(&amp;#39;hello world&amp;#39;) as length_value;&#xD;&#xA;   SELECT UPPER(&amp;#39;hello world&amp;#39;) as uppercase_string;&#xD;&#xA;   SELECT LOWER(&amp;#39;HELLO WORLD&amp;#39;) as lowercase_string;&#xD;&#xA;   条件函数:&#xD;&#xA;   SELECT IF(1&amp;gt;2, &amp;#39;true&amp;#39;, &amp;#39;false&amp;#39;) as condition_value;&#xD;&#xA;   SELECT IFNULL(NULL, &amp;#39;default_value&amp;#39;) as null_value;&#xD;&#xA;   SELECT COALESCE(NULL, &amp;#39;default_value&amp;#39;) as coalesce_value;&#xD;&#xA;   聚合函数:&#xD;&#xA;   SELECT COUNT(*) as count_value;&#xD;&#xA;   SELECT SUM(1) as sum_value;&#xD;&#xA;   SELECT AVG(1) as avg_value;&#xD;&#xA;   SELECT MAX(1) as max_value;&#xD;&#xA;   SELECT MIN(1) as min_value;&#xD;&#xA;   位函数:&#xD;&#xA;   SELECT BIT_AND(1, 2) as bit_and_value;&#xD;&#xA;   SELECT BIT_OR(1, 2) as bit_or_value;&#xD;&#xA;   SELECT BIT_XOR(1, 2) as bit_xor_value;&#xD;&#xA;   SELECT BIT_COUNT(1) as bit_count_value;&#xD;&#xA;   随机函数:&#xD;&#xA;   SELECT RAND() as random_value;&#xD;&#xA;   SELECT RAND(10) as random_value;&#xD;&#xA;   SELECT RANDINT(1, 10) as random_int_value;&#xD;&#xA;   系统函数:&#xD;&#xA;   SELECT USER() as user_name;&#xD;&#xA;   SELECT DATABASE() as database_name;&#xD;&#xA;   SELECT VERSION() as version_value;&#xD;&#xA;   SELECT SCHEMA() as schema_name;&#xD;&#xA;   SELECT CONNECTION_ID() as connection_id;&#xD;&#xA;   SELECT SYSTEM_USER() as system_user_name;&#xD;&#xA;   SELECT CURRENT_USER() as current_user_name;&#xD;&#xA;   SELECT SESSION_USER() as session_user_name;&#xD;&#xA;   SELECT LAST_INSERT_ID() as last_insert_id_value;&#xD;&#xA;   SELECT GET_LOCK(&amp;#39;test_lock&amp;#39;, 10) as lock_status;&#xD;&#xA;   SELECT RELEASE_LOCK(&amp;#39;test_lock&amp;#39;) as lock_status;&#xD;&#xA;   SELECT MASTER_POS_WAIT(10) as master_position;&#xD;&#xA;   SELECT INET_ATON(&amp;#39;192.168.1.1&amp;#39;) as ip_address_value;&#xD;&#xA;   SELECT INET_NTOA(3232235777) as ip_address_value;&#xD;&#xA;   SELECT CONVERT(&amp;#39;2021-01-01&amp;#39;, DATE) as date_value;&#xD;&#xA;   SELECT CONVERT(&amp;#39;2021-01-01 12:00:00&amp;#39;, DATETIME) as datetime_value;&#xD;&#xA;   SELECT CONVERT(&amp;#39;12:00:00&amp;#39;, TIME) as time_value;&#xD;&#xA;   SELECT CONVERT(&amp;#39;hello&amp;#39;, CHAR) as char_value;&#xD;&#xA;   SELECT CONVERT(&amp;#39;hello&amp;#39;, VARCHAR) as varchar_value;&#xD;&#xA;   SELECT CONVERT(&amp;#39;hello&amp;#39;, TEXT) as text_value;&#xD;&#xA;   SELECT CONVERT(123, INT) as int_value;&#xD;&#xA;   SELECT CONVERT(123, DECIMAL) as decimal_value;&#xD;&#xA;   SELECT CONVERT(123, FLOAT) as float_value;&#xD;&#xA;   SELECT CONVERT(123, DOUBLE) as double_value;&#xD;&#xA;   SELECT CONVERT(123, BOOLEAN) as boolean_value;&#xD;&#xA;   SELECT CONVERT(123, BINARY) as binary_value;&#xD;&#xA;   SELECT CONVERT(123, VARBINARY) as varbinary_value;&#xD;&#xA;   SELECT CONVERT(123, TINYINT) as tinyint_value;&#xD;&#xA;   SELECT CONVERT(123, SMALLINT) as smallint_value;&#xD;&#xA;   SELECT CONVERT(123, MEDIUMINT) as mediumint_value;&#xD;&#xA;   SELECT CONVERT(123, INT) as int_value;&#xD;&#xA;   SELECT CONVERT(123, BIGINT) as bigint_value;&#xD;&#xA;   SELECT CONVERT(123, DECIMAL) as decimal_value;&#xD;&#xA;   SELECT CONVERT(123, DECIMAL(10,2)) as decimal_value;&#xD;&#xA;   SELECT CONVERT(123, NUMERIC) as numeric_value;&#xD;&#xA;   SELECT CONVERT(123, DATE) as date_value;&#xD;&#xA;   SELECT CONVERT(123, DATETIME) as datetime_value;&#xD;&#xA;   SELECT CONVERT(123, TIME) as time_value;&#xD;&#xA;   SELECT CONVERT(123, YEAR) as year_value;&#xD;&#xA;   SELECT CONVERT(123, CHAR) as char_value;&#xD;&#xA;   JSON函数:&#xD;&#xA;   SET @json = &amp;#39;{&amp;#34;name&amp;#34;: &amp;#34;John&amp;#34;, &amp;#34;age&amp;#34;: 30}&amp;#39;;&#xD;&#xA;   SELECT JSON_EXTRACT(@json, &amp;#39;$.name&amp;#39;) AS name;  -- 返回 &amp;#39;John&amp;#39;&#xD;&#xA;   SELECTSELECT JSON_UNQUOTE(JSON_EXTRACT(@json, &amp;#39;$.age&amp;#39;)) AS age;  -- 返回 &amp;#39;30&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;压力测试&lt;/strong&gt; : 主要测试软件在高并发、高负载下的表现，如并发量、响应时间、数据库连接数等。&#xA;&lt;strong&gt;兼容性测试&lt;/strong&gt; : 主要测试软件在不同操作系统、不同浏览器、不同版本的浏览器下是否能正常运行。&#xA;&lt;strong&gt;安全测试&lt;/strong&gt; : 主要测试软件在不同攻击方式下是否能正常运行，如SQL注入、XSS攻击、CSRF攻击等。&#xA;&lt;strong&gt;单元测试&lt;/strong&gt;: 主要测试软件的各个模块是否能正常运行，如数据库连接、业务逻辑、界面显示等。&#xA;使用测试框架如Junit、Mocha、PHPUnit等进行单元测试。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1120_2024/1120_2024%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%93%8D%E9%A2%84%E5%A4%87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1120_2024/1120_2024%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%93%8D%E9%A2%84%E5%A4%87/</guid>
      <description>&lt;h2 id=&#34;1120_2024软件测试实操预备&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1120_2024%e8%bd%af%e4%bb%b6%e6%b5%8b%e8%af%95%e5%ae%9e%e6%93%8d%e9%a2%84%e5%a4%87&#34;&gt;&lt;/a&gt;&#xA;1120_2024软件测试实操预备&#xA;&lt;/h2&gt;&lt;h3 id=&#34;步骤1-安装mysql数据库&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ad%a5%e9%aa%a41-%e5%ae%89%e8%a3%85mysql%e6%95%b0%e6%8d%ae%e5%ba%93&#34;&gt;&lt;/a&gt;&#xA;步骤1: 安装mysql数据库&#xA;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;由于实验需要上传mysql源码, 所以这里使用开源代码仓库已有的mysql版本&#xD;&#xA;-- 在linux操作系统下载对应的 docker&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;操作系统版本: ubuntu24.04.1 LTS&#xA;// 登录账户记录: ssh &lt;a href=&#34;mailto:caisn@192.168.14.119&#34;&gt;caisn@192.168.14.119&lt;/a&gt;&#xA;docker版本: &lt;strong&gt;mysql-8.0&lt;/strong&gt;&#xA;&lt;a href=&#34;https://hub.docker.com/layers/library/mysql/8.0.0/images/sha256-228d71078f8ce5ae9fd96b183f88c3a90e30544b4b7ce9d64a238d05fef2a681&#34;&gt;https://hub.docker.com/layers/library/mysql/8.0.0/images/sha256-228d71078f8ce5ae9fd96b183f88c3a90e30544b4b7ce9d64a238d05fef2a681&lt;/a&gt;&#xA;mysql源码地址: 这里有5.7, 8.0, 8.4j三个版本的数据, 为了方便,这里使用了&lt;strong&gt;8.0&lt;/strong&gt;版本的mysql源码&#xA;&lt;a href=&#34;https://github.com/mysql/mysql-server/tree/8.0&#34;&gt;https://github.com/mysql/mysql-server/tree/8.0&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;安装: docker 镜像文件:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker pull mysql:8.0.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;测试创建数据库:&#xA;测试创建对象:&#xA;测试创建表格:&lt;/p&gt;&#xA;&lt;p&gt;手动测试:&lt;/p&gt;&#xA;&lt;h3 id=&#34;步骤2-安装python环境&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ad%a5%e9%aa%a42-%e5%ae%89%e8%a3%85python%e7%8e%af%e5%a2%83&#34;&gt;&lt;/a&gt;&#xA;步骤2: 安装python环境&#xA;&lt;/h3&gt;&lt;p&gt;这个用来做单元测试:&lt;/p&gt;&#xA;&lt;h3 id=&#34;步骤3-安装基准测评软件&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ad%a5%e9%aa%a43-%e5%ae%89%e8%a3%85%e5%9f%ba%e5%87%86%e6%b5%8b%e8%af%84%e8%bd%af%e4%bb%b6&#34;&gt;&lt;/a&gt;&#xA;步骤3: 安装基准测评软件&#xA;&lt;/h3&gt;&lt;h3 id=&#34;步骤4-开测&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ad%a5%e9%aa%a44-%e5%bc%80%e6%b5%8b&#34;&gt;&lt;/a&gt;&#xA;步骤4: 开测&#xA;&lt;/h3&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1121_2024%E5%AE%89%E8%A3%85docker-mysql/1121_2024%E5%AE%89%E8%A3%85docker-mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1121_2024%E5%AE%89%E8%A3%85docker-mysql/1121_2024%E5%AE%89%E8%A3%85docker-mysql/</guid>
      <description>&lt;h1 id=&#34;1121_2024安装docker-mysql----问题未解决&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1121_2024%e5%ae%89%e8%a3%85docker-mysql----%e9%97%ae%e9%a2%98%e6%9c%aa%e8%a7%a3%e5%86%b3&#34;&gt;&lt;/a&gt;&#xA;1121_2024安装docker-mysql &amp;ndash; 问题未解决&#xA;&lt;/h1&gt;&lt;h2 id=&#34;版本配置&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%89%88%e6%9c%ac%e9%85%8d%e7%bd%ae&#34;&gt;&lt;/a&gt;&#xA;版本配置&#xA;&lt;/h2&gt;&lt;p&gt;由于实验需要上传mysql源码, 所以这里使用开源代码仓库已有的mysql版本&#xA;&amp;ndash; 在linux操作系统下载对应的 docker&lt;/p&gt;&#xA;&lt;p&gt;操作系统版本: ubuntu24.04.1 LTS&#xA;// 登录账户记录: ssh &lt;a href=&#34;mailto:caisn@192.168.14.119&#34;&gt;caisn@192.168.14.119&lt;/a&gt;&#xA;docker版本: &lt;strong&gt;mysql-8.0&lt;/strong&gt;&#xA;&lt;a href=&#34;https://hub.docker.com/layers/library/mysql/8.0.0/images/sha256-228d71078f8ce5ae9fd96b183f88c3a90e30544b4b7ce9d64a238d05fef2a681&#34;&gt;https://hub.docker.com/layers/library/mysql/8.0.0/images/sha256-228d71078f8ce5ae9fd96b183f88c3a90e30544b4b7ce9d64a238d05fef2a681&lt;/a&gt;&#xA;mysql源码地址: 这里有5.7, 8.0, 8.4j三个版本的数据, 为了方便,这里使用了&lt;strong&gt;8.0&lt;/strong&gt;版本的mysql源码&#xA;&lt;a href=&#34;https://github.com/mysql/mysql-server/tree/8.0&#34;&gt;https://github.com/mysql/mysql-server/tree/8.0&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;这里遇到一些问题:&#xA;报错: docker : Error response from daemon: Get &lt;a href=&#34;https://registry-1.docker.io/v2/:net/https:request&#34;&gt;https://registry-1.docker.io/v2/:net/https:request&lt;/a&gt; canceled while waiting for connection (Client. Timeout exceeded while awaiting headers)&#xA;解决办法: 修改为国内镜像源:&lt;/p&gt;&#xA;&lt;h2 id=&#34;步骤1-安装docker以及mysql&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ad%a5%e9%aa%a41-%e5%ae%89%e8%a3%85docker%e4%bb%a5%e5%8f%8amysql&#34;&gt;&lt;/a&gt;&#xA;步骤1. 安装docker以及mysql&#xA;&lt;/h2&gt;&lt;p&gt;遇到问题:&#xA;无法ping通网络, 可以ping 通单个的ip地址, 但是无法ping 通域名&#xA;&lt;img src=&#34;image-1.png&#34; alt=&#34;alt text&#34;&gt;&#xA;udp的53号端口无法访问&lt;/p&gt;&#xA;&lt;p&gt;看了下端口占用情况:&#xA;&lt;img src=&#34;image-2.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;尝试了几种方法,都没有找到原因, 重新装了一个ubuntu&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;开始安装docker:&#xD;&#xA;参考教程 : https://www.cnblogs.com/ylz8401/p/18251415&#xD;&#xA;&#xD;&#xA;开始安装mysql:&#xD;&#xA;docker pull mysql:8.0.0&#xD;&#xA;&#xD;&#xA;拉到镜像之后, mysql的docker使用 8.0.0 版本, 参考使用教程:&#xD;&#xA;https://hub.docker.com/_/mysql&#xD;&#xA;&#xD;&#xA;开启镜像:&#xD;&#xA;注意: 要制定端口, 这样后面的 python unittest连接的时候才能正常连接&#xD;&#xA;docker run -p 3306:3306 --name csn-mysql2 -e MYSQL_ROOT_PASSWORD=pw -d mysql:8.0.0&#xD;&#xA;&#xD;&#xA;查看镜像:&#xD;&#xA;docker ps&#xD;&#xA;&#xD;&#xA;进入docker 容器: docker exec -it csn-mysql /bin/bash&#xD;&#xA;&#xD;&#xA;进入mysql 命令行&#xD;&#xA;mysql -u root -p  &#xD;&#xA;密码: pw&#xD;&#xA;&#xD;&#xA;1. 尝试直接执行sql文件&amp;#34;:&#xD;&#xA;source /path/to/your/file.sql;&#xD;&#xA;&#xD;&#xA;   尝试直接将sql文件的输出结果输出一个文件中:&#xD;&#xA;mysql -u root -p &amp;lt; ./test_function.sql &amp;gt;test_function.output&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;2.尝试使用python文件做单元测试:&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;步骤2尝试手动直接执行sql文件&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ad%a5%e9%aa%a42%e5%b0%9d%e8%af%95%e6%89%8b%e5%8a%a8%e7%9b%b4%e6%8e%a5%e6%89%a7%e8%a1%8csql%e6%96%87%e4%bb%b6&#34;&gt;&lt;/a&gt;&#xA;步骤2.尝试手动直接执行sql文件&#xA;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;image-3.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1123_2024%E8%AE%A1%E5%88%92%E5%AE%89%E6%8E%92/1123_2024%E8%AE%A1%E5%88%92%E5%AE%89%E6%8E%92/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1123_2024%E8%AE%A1%E5%88%92%E5%AE%89%E6%8E%92/1123_2024%E8%AE%A1%E5%88%92%E5%AE%89%E6%8E%92/</guid>
      <description>&lt;h1 id=&#34;1123_2024-软件测试性能部分完善&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1123_2024-%e8%bd%af%e4%bb%b6%e6%b5%8b%e8%af%95%e6%80%a7%e8%83%bd%e9%83%a8%e5%88%86%e5%ae%8c%e5%96%84&#34;&gt;&lt;/a&gt;&#xA;1123_2024 软件测试性能部分完善&#xA;&lt;/h1&gt;&lt;h2 id=&#34;完成软件测试期末作业&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%8c%e6%88%90%e8%bd%af%e4%bb%b6%e6%b5%8b%e8%af%95%e6%9c%9f%e6%9c%ab%e4%bd%9c%e4%b8%9a&#34;&gt;&lt;/a&gt;&#xA;完成软件测试期末作业:&#xA;&lt;/h2&gt;&lt;h3 id=&#34;代码部分&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bb%a3%e7%a0%81%e9%83%a8%e5%88%86&#34;&gt;&lt;/a&gt;&#xA;代码部分:&#xA;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;目前环境搭建完成&#xD;&#xA;python uniitetst 测试基本完成&#xD;&#xA;还差一个性能测试&#xD;&#xA;&#xD;&#xA;整理ppt, 补充完成&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;环境说明&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%8e%af%e5%a2%83%e8%af%b4%e6%98%8e&#34;&gt;&lt;/a&gt;&#xA;环境说明:&#xA;&lt;/h2&gt;&lt;p&gt;测试环境:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@1d3592ad9fbd:/# cat /etc/os-release &#xD;&#xA;PRETTY_NAME=&amp;#34;Debian GNU/Linux 8 (jessie)&amp;#34;&#xD;&#xA;NAME=&amp;#34;Debian GNU/Linux&amp;#34;&#xD;&#xA;VERSION_ID=&amp;#34;8&amp;#34;&#xD;&#xA;VERSION=&amp;#34;8 (jessie)&amp;#34;&#xD;&#xA;ID=debian&#xD;&#xA;HOME_URL=&amp;#34;http://www.debian.org/&amp;#34;&#xD;&#xA;SUPPORT_URL=&amp;#34;http://www.debian.org/support&amp;#34;&#xD;&#xA;BUG_REPORT_URL=&amp;#34;https://bugs.debian.org/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;image-2.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;CPU 核数: 给虚拟机设置处理器为8, 每个处理器内核数量为1&#xA;&lt;img src=&#34;image-3.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;性能测试部分&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e9%83%a8%e5%88%86&#34;&gt;&lt;/a&gt;&#xA;性能测试部分:&#xA;&lt;/h3&gt;&lt;p&gt;参考教程: &lt;a href=&#34;https://www.cnblogs.com/xulinforDB/p/17496223.html&#34;&gt;https://www.cnblogs.com/xulinforDB/p/17496223.html&lt;/a&gt;&#xA;&lt;a href=&#34;https://blog.csdn.net/weixin_41287260/article/details/130473382&#34;&gt;https://blog.csdn.net/weixin_41287260/article/details/130473382&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;测试环境: 使用MYSQL 自带的性能压力测试工具mysqlslap进行测试;&lt;/p&gt;&#xA;&lt;p&gt;运行命令:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker exec -it csn-mysql2 mysqlslap -u root -p --concurrency=8 --iterations=1000 --create-schema=test&#xD;&#xA;Enter password: &#xD;&#xA;&#xD;&#xA;Benchmark&#xD;&#xA;&#x9;Average number of seconds to run all queries: 0.016 seconds&#xD;&#xA;&#x9;Minimum number of seconds to run all queries: 0.011 seconds&#xD;&#xA;&#x9;Maximum number of seconds to run all queries: 0.032 seconds&#xD;&#xA;&#x9;Number of clients running queries: 8&#xD;&#xA;&#x9;Average number of queries per client: 0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用户数: 8&#xA;测试语句: 1000&#xA;&lt;img src=&#34;image-5.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1125_2024/1125_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1125_2024/1125_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB1/</guid>
      <description>&lt;h1 id=&#34;1125_文献阅读&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1125_%e6%96%87%e7%8c%ae%e9%98%85%e8%af%bb&#34;&gt;&lt;/a&gt;&#xA;1125_文献阅读&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1125_2024/zotera%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1125_2024/zotera%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h1 id=&#34;1125_tools_zotera使用&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1125_tools_zotera%e4%bd%bf%e7%94%a8&#34;&gt;&lt;/a&gt;&#xA;1125_tools_zotera使用&#xA;&lt;/h1&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  准备开始认真看论文, 找了下软件, 优选zotera, 所以这里研究下zotera的使用方法&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;一-zotera导入文献&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%80-zotera%e5%af%bc%e5%85%a5%e6%96%87%e7%8c%ae&#34;&gt;&lt;/a&gt;&#xA;一. zotera导入文献&#xA;&lt;/h2&gt;&lt;p&gt;参考教程: &lt;a href=&#34;https://www.bilibili.com/video/BV1st4y1F7FR/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=d38e0f78e7b9c1eda1934361a1db49da&#34;&gt;https://www.bilibili.com/video/BV1st4y1F7FR/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=d38e0f78e7b9c1eda1934361a1db49da&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;pdf导入zotera教程:&#xA;安装以下插件&#xA;&lt;img src=&#34;image.png&#34; alt=&#34;alt text&#34;&gt;&#xA;其中一个是用来打开pdf文件, 另一个是用来查看英文翻译的&#xA;之后对于下载好的pdf文件, 直接鼠标左键拖动到zotera里面就可以了&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;2.通过文献代码导入文件:&#xA;打开zotera, 点击菜单栏的File-&amp;gt;Import-&amp;gt;Import from Citation Codes&#xA;然后在弹出的窗口中粘贴文献代码, 点击OK即可导入文献&#xA;&lt;img src=&#34;image-1.png&#34; alt=&#34;alt text&#34;&gt;&#xA;直接复制网址&#xA;&lt;img src=&#34;image-2.png&#34; alt=&#34;alt text&#34;&gt;&#xA;确实挺好用的, 还不错&lt;/p&gt;&#xA;&lt;p&gt;3.安装浏览器-zotera插件&#xA;&lt;img src=&#34;image-3.png&#34; alt=&#34;&#xA;&#34;&gt;&#xA;然后在浏览器中看到需要的文章时候, 点击浏览器 - 插件 - zotera connector, 就可以下载到本地了&#xA;&lt;img src=&#34;image-4.png&#34; alt=&#34;&#xA;&#34;&gt;&#xA;大概是这个样子&#xA;看起来不错, 好用好用的&lt;/p&gt;&#xA;&lt;p&gt;4.批量导入文献:&#xA;这个之后再看, 先跳过&lt;/p&gt;&#xA;&lt;p&gt;&amp;ndash; 还可以用来导入哔哩哔哩, 这个就有意思了&lt;/p&gt;&#xA;&lt;p&gt;知网抓取:&#xA;同样地和3的方法相同,点击批量下载即可, 然后选择需要的文献, 点击下载即可&lt;/p&gt;&#xA;&lt;h2 id=&#34;2zotera与chatgpt的搭配使用&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#2zotera%e4%b8%8echatgpt%e7%9a%84%e6%90%ad%e9%85%8d%e4%bd%bf%e7%94%a8&#34;&gt;&lt;/a&gt;&#xA;2.zotera与chatgpt的搭配使用&#xA;&lt;/h2&gt;&lt;p&gt;参考教程: &lt;a href=&#34;https://www.bilibili.com/video/BV1zBpUeDEzM/?spm_id_from=333.337.search-card.all.click&#34;&gt;https://www.bilibili.com/video/BV1zBpUeDEzM/?spm_id_from=333.337.search-card.all.click&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;参考教程: &lt;a href=&#34;https://www.bilibili.com/video/BV1Wa4y1V777/&#34;&gt;https://www.bilibili.com/video/BV1Wa4y1V777/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;chatgpt-zotera 插件:  &lt;a href=&#34;https://github.com/MuiseDestiny/zotero-gpt?tab=readme-ov-file&#34;&gt;https://github.com/MuiseDestiny/zotero-gpt?tab=readme-ov-file&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;chatanywhere API, google申请免费内测,{[需要申请的3个数据: API, 可调用的model, 以及API key]}&#xA;&lt;img src=&#34;image-5.png&#34; alt=&#34;&#xA;&#34;&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;然后回到zotera的设置里面:&#xA;就可以开始思丝滑体验了,&#xA;&lt;img src=&#34;image-6.png&#34; alt=&#34;&#xA;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/1126_2024%E4%BD%9C%E4%B8%9A%E5%AE%8C%E6%88%90/1126_2024_%E4%BD%9C%E4%B8%9A%E5%AE%8C%E6%88%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/1126_2024%E4%BD%9C%E4%B8%9A%E5%AE%8C%E6%88%90/1126_2024_%E4%BD%9C%E4%B8%9A%E5%AE%8C%E6%88%90/</guid>
      <description>&lt;h1 id=&#34;1126_2024作业完成&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1126_2024%e4%bd%9c%e4%b8%9a%e5%ae%8c%e6%88%90&#34;&gt;&lt;/a&gt;&#xA;1126_2024作业完成&#xA;&lt;/h1&gt;&lt;h2 id=&#34;今日规划&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bb%8a%e6%97%a5%e8%a7%84%e5%88%92&#34;&gt;&lt;/a&gt;&#xA;今日规划:&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;任务&lt;/th&gt;&#xA;          &lt;th&gt;完成情况&lt;/th&gt;&#xA;          &lt;th&gt;其他&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;机器学习python&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;软件测试ppt制作&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;软件测试视频录制&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;任务一-机器学习python&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bb%bb%e5%8a%a1%e4%b8%80-%e6%9c%ba%e5%99%a8%e5%ad%a6%e4%b9%a0python&#34;&gt;&lt;/a&gt;&#xA;任务一, 机器学习python&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;创建python venv 虚拟环境 :&#xA;&lt;code&gt;python -m venv $path/ &lt;/code&gt;&#xA;这里的path: 比如: /home/caisn/machine/ , 那么最终被激活的名字叫machine。&lt;/li&gt;&#xA;&lt;li&gt;fisher部分: 参考教程: &lt;a href=&#34;https://blog.csdn.net/qq_42585108/article/details/105918590&#34;&gt;https://blog.csdn.net/qq_42585108/article/details/105918590&lt;/a&gt;&#xA;&amp;mdash;已经完成&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3.最小二乘法部分: 参考教程:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import numpy as np&#xD;&#xA;import matplotlib.pyplot as plt&#xD;&#xA;&#xD;&#xA;# 1. 生成二分类数据&#xD;&#xA;def generate_data(n_samples=100):&#xD;&#xA;    np.random.seed(42)&#xD;&#xA;    X_class1 = np.random.multivariate_normal(mean=[2, 2], cov=[[1, 0], [0, 1]], size=n_samples//2)&#xD;&#xA;    X_class2 = np.random.multivariate_normal(mean=[-2, -2], cov=[[1, 0], [0, 1]], size=n_samples//2)&#xD;&#xA;    X = np.vstack((X_class1, X_class2))&#xD;&#xA;    y = np.hstack((np.ones(n_samples//2), np.zeros(n_samples//2)))  # 类别1为1，类别2为0&#xD;&#xA;    return X, y&#xD;&#xA;&#xD;&#xA;# 2. 最小二乘法分类器&#xD;&#xA;class LeastSquaresClassifier:&#xD;&#xA;    def __init__(self):&#xD;&#xA;        self.weights = None&#xD;&#xA;    &#xD;&#xA;    def fit(self, X, y):&#xD;&#xA;        # 增加偏置项&#xD;&#xA;        X = np.hstack((X, np.ones((X.shape[0], 1))))  # 在X中增加一列全为1&#xD;&#xA;        # 最小二乘法解：w = (X^T X)^(-1) X^T y&#xD;&#xA;        self.weights = np.linalg.inv(X.T @ X) @ X.T @ y&#xD;&#xA;    &#xD;&#xA;    def predict(self, X):&#xD;&#xA;        X = np.hstack((X, np.ones((X.shape[0], 1))))  # 增加偏置项&#xD;&#xA;        predictions = X @ self.weights&#xD;&#xA;        return (predictions &amp;gt;= 0.5).astype(int)  # 根据阈值0.5判断类别&#xD;&#xA;&#xD;&#xA;# 3. 可视化分类结果&#xD;&#xA;def plot_decision_boundary(X, y, model):&#xD;&#xA;    x_min, x_max = X[:, 0].min() - 1, X[:, 0].max() + 1&#xD;&#xA;    y_min, y_max = X[:, 1].min() - 1, X[:, 1].max() + 1&#xD;&#xA;    xx, yy = np.meshgrid(np.arange(x_min, x_max, 0.1),&#xD;&#xA;                         np.arange(y_min, y_max, 0.1))&#xD;&#xA;    grid = np.c_[xx.ravel(), yy.ravel()]&#xD;&#xA;    predictions = model.predict(grid).reshape(xx.shape)&#xD;&#xA;    plt.contourf(xx, yy, predictions, alpha=0.6, cmap=plt.cm.Paired)&#xD;&#xA;&#xD;&#xA;a = (np.mean(x[:,0] * x[:,1]) - np.mean(x[:,0]) * np.mean(x[:,1])) / (np.mean(x[:,0]*x[:,0]) - np.mean(x[:,0]) * np.mean(x[:,0]))&#xD;&#xA;b = np.mean(x[:,1]) - a * np.mean(x[:,0])&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/nov_2024/1127_2024/%E4%BB%8A%E6%97%A5%E8%A7%84%E5%88%92%E4%BB%A5%E5%8F%8A%E4%BB%BB%E5%8A%A1%E5%AE%8C%E6%88%90%E6%83%85%E5%86%B5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/nov_2024/1127_2024/%E4%BB%8A%E6%97%A5%E8%A7%84%E5%88%92%E4%BB%A5%E5%8F%8A%E4%BB%BB%E5%8A%A1%E5%AE%8C%E6%88%90%E6%83%85%E5%86%B5/</guid>
      <description>&lt;h1 id=&#34;今日规划以及任务完成情况&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bb%8a%e6%97%a5%e8%a7%84%e5%88%92%e4%bb%a5%e5%8f%8a%e4%bb%bb%e5%8a%a1%e5%ae%8c%e6%88%90%e6%83%85%e5%86%b5&#34;&gt;&lt;/a&gt;&#xA;今日规划以及任务完成情况&#xA;&lt;/h1&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;任务&lt;/th&gt;&#xA;          &lt;th&gt;完成情况&lt;/th&gt;&#xA;          &lt;th&gt;其他&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;昨日机器学习:&lt;/td&gt;&#xA;          &lt;td&gt;完成, 已提交&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;今日软件测试ppt制作&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;将本学期的作业上传到自己的github上&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;在windows上装一个wsl&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;首先提交机器学习作业&lt;/li&gt;&#xA;&lt;li&gt;ppt制作:&#xA;首先: 完善ppt内容,&#xA;其次, 找到ppt模板, 参考制作ppt,&#xA;明天再录制一份视频即可&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;下午规划&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%8b%e5%8d%88%e8%a7%84%e5%88%92&#34;&gt;&lt;/a&gt;&#xA;下午规划&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;继续阅读论文&lt;/li&gt;&#xA;&lt;li&gt;安装欧拉系统&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/nov_2024/1127_2024/%E6%AC%A7%E6%8B%89%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E4%BB%BB%E5%8A%A1%E6%98%8E%E7%A1%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/nov_2024/1127_2024/%E6%AC%A7%E6%8B%89%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E4%BB%BB%E5%8A%A1%E6%98%8E%E7%A1%AE/</guid>
      <description>&lt;h1 id=&#34;欧拉操作系统安装与任务明确&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ac%a7%e6%8b%89%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f%e5%ae%89%e8%a3%85%e4%b8%8e%e4%bb%bb%e5%8a%a1%e6%98%8e%e7%a1%ae&#34;&gt;&lt;/a&gt;&#xA;欧拉操作系统安装与任务明确&#xA;&lt;/h1&gt;&lt;h2 id=&#34;欧拉操作系统简介&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ac%a7%e6%8b%89%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f%e7%ae%80%e4%bb%8b&#34;&gt;&lt;/a&gt;&#xA;欧拉操作系统简介:&#xA;&lt;/h2&gt;&lt;p&gt;欧拉操作系统集成了先进的linux技术, 在系统性能, 安全性, 可靠性以及容器技术等方面实现技术增强,&#xA;优势: 见open欧拉白皮书: &lt;a href=&#34;https://www.openeuler.org/whitepaper/openEuler-whitepaper-2203.pdf&#34;&gt;https://www.openeuler.org/whitepaper/openEuler-whitepaper-2203.pdf&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;主要特性: &lt;strong&gt;从服务器操作系统正式升级为面向数字基础设施的操作系统, 支持服务器, 云计算, 边缘计算吗, 嵌入式等应用场景, 支持OT领域应用以及OT与ICT的融合&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;一个小的总结:&#xA;&lt;img src=&#34;image.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;从白皮书中, 可以看到, openEuler的5.10版本实现内核热升级内存分级扩展等多个创新特性; openEuler 21.09 增强了服务器和云计算的特性, 发布面向云原生的&lt;strong&gt;业务混部CPU调度算法, 容器化操作系统KubeOS等关键技术,看同时发布边缘和嵌入式版本&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;openOLaa的新特性:&lt;/strong&gt;&#xA;其中与内存相关的有:&#xA;&amp;ndash; 大页vmalloc性能优化: 对于超过huge page的最小size的空间的空间进行vmalloc()分配的时候, 将会尝试使用huge page而不是base page来映射内存看, 改善TLB的利用看, 降低TLB miss&#xA;&amp;ndash; OOM 内存回收算法: 在发生OOM时, 优先对低优先级的进程组进行内存回收吗, 保障在线业务的正常运行&#xA;&amp;ndash; SVA支持: 进程虚拟地址在主机进程和设备间共享, 实现资源跨主机与设备免拷贝服用, 提升主机和设备业务通讯性能&#xA;&amp;ndash; 内存可靠性分级技术: 通过对不同可靠性等级的内存分级管理, 可以支持内核, 关键进程, 内存文件系统, 文件缓存使用高可用内存, 避免内存多bit故障引起内核复位&#xA;&amp;ndash; 动态大页技术: 支持对大页进行拆分和合并的功能, 从而使得绑定到memcg的进程可以使用1G/2M/4K三种页, 当大页资源不足的时候,可以动态配置大页资源, 避免系统冲求, 减少业务中断时间&#xA;&amp;ndash; 内存RAS容错增强:支持copy_from_user读操作时, 发生内存多bit错误, 系统不复位,. 可以通过杀掉受影响的进程, 避免内核复位,&#xA;&amp;ndash; 内存可靠性分级, 对用户态和服务态进行划分: 内核核心数据源高可靠, 支持进程使用高可靠, 支持文件系统使用高可靠, 支持文件缓存使用高可靠,&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/nov_2024/1130_2024/1130_%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/nov_2024/1130_2024/1130_%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;h1 id=&#34;搭建自己的博客&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%90%ad%e5%bb%ba%e8%87%aa%e5%b7%b1%e7%9a%84%e5%8d%9a%e5%ae%a2&#34;&gt;&lt;/a&gt;&#xA;搭建自己的博客&#xA;&lt;/h1&gt;&lt;h2 id=&#34;参考zy的教程&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83zy%e7%9a%84%e6%95%99%e7%a8%8b&#34;&gt;&lt;/a&gt;&#xA;参考zy的教程:&#xA;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://moxianhs.github.io/posts/hugo-configuration/&#34;&gt;https://moxianhs.github.io/posts/hugo-configuration/&lt;/a&gt;&#xA;&lt;a href=&#34;https://moxianhs.github.io/posts/github-pages-configuration/&#34;&gt;https://moxianhs.github.io/posts/github-pages-configuration/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;建议参考的官方教程&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%bb%ba%e8%ae%ae%e5%8f%82%e8%80%83%e7%9a%84%e5%ae%98%e6%96%b9%e6%95%99%e7%a8%8b&#34;&gt;&lt;/a&gt;&#xA;建议参考的官方教程:&#xA;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blowfish.page/zh-cn/docs/installation/&#34;&gt;https://blowfish.page/zh-cn/docs/installation/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;目前进度&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%9b%ae%e5%89%8d%e8%bf%9b%e5%ba%a6&#34;&gt;&lt;/a&gt;&#xA;目前进度:&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;&#xA;&#34;&gt;&#xA;有点奇怪, 是空的, 不知道少了什么&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方法&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95&#34;&gt;&lt;/a&gt;&#xA;解决方法:&#xA;&lt;/h2&gt;&lt;p&gt;原来直接用 sudo apt install hugo 下载的hugo版本不是最新版本, 是0.93的, 首先更新到最新版本&#xA;更新到最新版本之后就出来了:&lt;/p&gt;&#xA;&lt;p&gt;sudo apt怎么安装某个软件的制定版本:&#xA;&lt;!-- raw HTML omitted --&gt;sudo apt install package-name=version &lt;!-- raw HTML omitted --&gt;&#xA;&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;https://gohugo.io/getting-started/quick-start/&lt;/a&gt;&#xA;&lt;img src=&#34;image-1.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;sudo apt怎么安装某个软件的制定版本:&#xA;&lt;!-- raw HTML omitted --&gt;sudo apt-show-versions -a  &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;遇到报错&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%81%87%e5%88%b0%e6%8a%a5%e9%94%99&#34;&gt;&lt;/a&gt;&#xA;遇到报错:&amp;quot;&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;f67123d2a5114a32bcd546384f246cd.png&#34; alt=&#34;alt text&#34;&gt;&#xA;在构建过程中遇到,&#xA;这里需要重新安装hugo -extended 版本, 之前的估计不是拓展&#xA;&lt;img src=&#34;image-2.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;重新安装搭建起来&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/nov_2024/1130_2024/%E9%82%B5%E8%8B%A5%E6%99%A8%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/nov_2024/1130_2024/%E9%82%B5%E8%8B%A5%E6%99%A8%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</guid>
      <description>&lt;h1 id=&#34;邵若忱毕业论文阅读&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%82%b5%e8%8b%a5%e5%bf%b1%e6%af%95%e4%b8%9a%e8%ae%ba%e6%96%87%e9%98%85%e8%af%bb&#34;&gt;&lt;/a&gt;&#xA;邵若忱毕业论文阅读&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/oceanbasecomper/1026%E6%90%AD%E5%BB%BAoceanbase%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/oceanbasecomper/1026%E6%90%AD%E5%BB%BAoceanbase%E7%8E%AF%E5%A2%83/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:33819/post/oceanbasecomper/1102_2024oceanbase%E4%BB%A3%E7%A0%81%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:33819/post/oceanbasecomper/1102_2024oceanbase%E4%BB%A3%E7%A0%81%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h1 id=&#34;1102_2024oceanbase代码总结&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1102_2024oceanbase%e4%bb%a3%e7%a0%81%e6%80%bb%e7%bb%93&#34;&gt;&lt;/a&gt;&#xA;1102_2024OceanBase代码总结&#xA;&lt;/h1&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;项目&lt;/th&gt;&#xA;          &lt;th&gt;完成情况&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;环境搭建&lt;/td&gt;&#xA;          &lt;td&gt;已完成&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;时间类型添加 - 总结&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;删除表实现 -总结&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;更新表实现-总结&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&amp;ndash; 目前: 已修改41份文件, 更新2k代码, 排名174/1200&#xA;&lt;a href=&#34;https://github.com/caisn-github/miniob&#34;&gt;https://github.com/caisn-github/miniob&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1环境搭建----已总结&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1%e7%8e%af%e5%a2%83%e6%90%ad%e5%bb%ba----%e5%b7%b2%e6%80%bb%e7%bb%93&#34;&gt;&lt;/a&gt;&#xA;1.环境搭建 &amp;ndash; 已总结&#xA;&lt;/h2&gt;&lt;h2 id=&#34;2时间类型添加&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#2%e6%97%b6%e9%97%b4%e7%b1%bb%e5%9e%8b%e6%b7%bb%e5%8a%a0&#34;&gt;&lt;/a&gt;&#xA;2.时间类型添加&#xA;&lt;/h2&gt;&lt;p&gt;主要流程:&#xA;时间类型是数据库的几种基础类型中的一种(int, char, varchar, datetime, timestamp, date, time, year)等, 所以在实现的时候, 需要继承type类, 并做到&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;实现char-&amp;gt;date类型的转化, date -&amp;gt; char的转化(因为在用户输入的时候, 先识别到的是char类型, 落盘时候找到表中的元组), 所以需要实现char -&amp;gt; date&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;新增src/observer/common/type/date_type.cpp文件, 在char-&amp;gt;date之后判断是否是正常时间类型&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;3删除表实现&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#3%e5%88%a0%e9%99%a4%e8%a1%a8%e5%ae%9e%e7%8e%b0&#34;&gt;&lt;/a&gt;&#xA;3.删除表实现&#xA;&lt;/h2&gt;&lt;p&gt;主要流程:&#xA;删除表的操作实现比较简单:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;删除表实际在磁盘中的存储位置, 找到表存储的数据库地址, 并删除对应的&amp;quot;del_tbale_name&amp;quot;.data和&amp;quot;del_table_name&amp;quot;.table文件&lt;/li&gt;&#xA;&lt;li&gt;删除内存缓存中的表信息. miniOB的缓存有一个统一的管理handle, 调用该Memeory_handle的对应drop函数&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;4更新表实现&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#4%e6%9b%b4%e6%96%b0%e8%a1%a8%e5%ae%9e%e7%8e%b0&#34;&gt;&lt;/a&gt;&#xA;4.更新表实现&#xA;&lt;/h2&gt;&lt;p&gt;主要流程:&#xA;由于miniOB中没有update关键词, 所以从解析开始添加&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;添加UPDATE关键词, 在解析时候传入updateSqlNode中的table name, 更新的attribute_name, attribute_value, update的过滤where condition条件&lt;/li&gt;&#xA;&lt;li&gt;生成UPDATE的logical plan(逻辑算子)&lt;/li&gt;&#xA;&lt;li&gt;生成UPDATE的physical plan(物理算子)&lt;/li&gt;&#xA;&lt;li&gt;其中物理算子的操作: 通过condition找到需要更新的record, 对于每条记录进行更新操作:&#xA;确认attribute_name与元组是否一致;&#xA;替换attribute_value在record中的值&#xA;我的实现是使用了函数中自带的delete_record+insert_record来实现更新操作. 不确定这样的实现是否冗余.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
  </channel>
</rss>
